{{ include "common.storage.hostPathValidate" .Values }}
apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Service
spec: 
  replicas: {{ (default 1 .Values.replicas) }}
  strategy:
    type: {{ (default "Recreate" .Values.updateStrategy ) }}
  selector:
    matchLabels: {{ include "common.labels.selectorLabels" . | nindent 4 }}
  template: 
    metadata:
      name: {{ template "common.names.fullname" . }}
      labels: {{ include "common.labels.selectorLabels" . | nindent 4 }}
      annotations: {{ include "common.annotations" . | nindent 4 }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
    {{- if .Values.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
    {{- end }}
      hostname: {{ template "common.names.fullname" . }}
      {{- if hasKey .Values "global" }}
        {{- if hasKey .Values.global "ixChartContext" }}
          {{- if .Values.global.ixChartContext.addNvidiaRuntimeClass }}
      runtimeClassName: {{ .Values.global.ixChartContext.nvidiaRuntimeClassName }}
          {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}_frigate
          {{- $values := . -}}
          image: "{{ $values.frigate.image.repository }}:{{ $values.frigate.image.tag }}"
          imagePullPolicy: {{ $values.frigate.image.pullPolicy }}
          volumeMounts:
            {{ range $index, $hostPathConfiguration := .Values.FRIGATEextraAppVolumeMounts }}
            - name: extrappvolume-{{ $index }}
              mountPath: {{ $hostPathConfiguration.mountPath }}
              {{ if $hostPathConfiguration.readOnly }}
              readOnly: {{ $hostPathConfiguration.readOnly }}
              {{ end }}
            {{ end }}
          ports:
          - name: mainfrigate
            protocol: TCP
            containerPort: 5000
          {{- if .Values.hostNetwork }}
            hostPort: {{ .Values.FrigateServiceUI.port }}
          {{- else }}
            hostPort: null
          {{- end }}
          env:
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{ $envList := (default list .Values.environmentVariables) }}
            {{ $envList = mustAppend $envList (dict "name" "TZ" "value" .Values.timezone) }}
            {{ include "common.containers.environmentVariables" (dict "environmentVariables" $envList) | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 2
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
          startupProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 60
            successThreshold: 1
      {{ include "common.networking.dnsConfiguration" .Values | nindent 6 }}
      volumes:
        {{ range $index, $hostPathConfiguration := .Values.FRIGATEextraAppVolumeMounts }}
        - name: extrappvolume-{{ $index }}
          hostPath:
            path: {{ $hostPathConfiguration.hostPath }}
        {{ end }}

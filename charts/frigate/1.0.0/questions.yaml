groups:
  - name: "Frigate Configuration"
    description: "Configure frigate deployment"
  - name: "Networking"
    description: "Configure networking for container"
  - name: "Storage"
    description: "Persist and share data that is separate from the lifecycle of the container"
  - name: "Resource Reservation"
    description: "Specify resources to be allocated to workload"
  - name: "Resource Limits"
    description: "Set CPU/memory limits for Kubernetes Pod"
  - name: "Timezone"
    description: "Configure networking for container"
  - name: "Restart Policy"
    description: "Configure when pod should be restarted in case of failure"
  - name: "Scaling/Upgrade Policy"
    description: "Configure how pods are replaced when configuration is upgraded"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-frigateServiceTCP.port"
    path: "/web"

questions:

  # Port configuration
  - variable: frigateServiceTCP
    label: "Configure Frigate TCP Service"
    group: "Networking"
    schema:
      type: dict
      attrs:
        - variable: port
          label: "Port to expose for Frigate UI"
          schema:
            type: int
            min: 9000
            max: 65535
            default: 10001

  - variable: extraAppVolumeMounts
    label: "Frigate Extra Host Path Volumes"
    group: "Storage"
    schema:
      type: list
      items:
        - variable: extraAppVolume
          label: "Frigate Host Path Volume"
          description: "Add an extra host path volume for frigate application"
          schema:
            type: dict
            attrs:
              - variable: mountPath
                label: "Mount Path in Pod"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  required: true
              - variable: hostPath
                label: "Host Path"
                description: "Host path"
                schema:
                  type: hostpath
                  required: true
                  $ref:
                    - "validations/lockedHostPath"
              - variable: readOnly
                label: "Read Only"
                description: "Mount hostpath in read-only mode"
                schema:
                  type: boolean
                  default: false

  # Restart Policy
  - variable: jobRestartPolicy
    description: "Restart Policy for Job"
    label: "Restart Policy"
    group: "Restart Policy"
    schema:
      hidden: true
      type: string
      default: "OnFailure"
      show_if: [["workloadType", "!=", "Deployment"]]
      enum:
        - value: "OnFailure"
          description: "Only restart job if it fails"
        - value: "Never"
          description: "Never restart job even if it fails"
  
  - variable: enableResourceLimits
    label: "Enable Pod resource limits"
    group: "Resource Limits"
    schema:
      type: boolean
      default: false
  - variable: cpuLimit
    label: "CPU Limit"
    description: "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100."
    group: "Resource Limits"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^\\d+(?:\\.\\d+(?!.*m$)|m?$)"
      default: "4000m"
  - variable: memLimit
    label: "Memory Limit"
    group: "Resource Limits"
    description: "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
      default: "8Gi"

  - variable: timezone
    label: "Frigate container timezone"
    group: "Timezone"
    schema:
      type: string
      default: "Etc/UTC"
      $ref:
        - "definitions/timezone"

  # Update strategy
  - variable: updateStrategy
    description: "Upgrade Policy"
    label: "Update Strategy"
    group: "Scaling/Upgrade Policy"
    schema:
      type: string
      default: "Recreate"
      enum:
        - value: "RollingUpdate"
          description: "Create new pods and then kill old ones"
        - value: "Recreate"
          description: "Kill existing pods before creating new ones"